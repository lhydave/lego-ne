num_players = 2

def BestResponse1(s2: p2) -> p1:
    description = "Best response for player 1 against s2"
    extra_params = []
    constraints = [
        forall(x:p1).(U1(x,s2)<=U1(x1,s2))
    ]
    return x1

def BestResponse2(s1: p1) -> p2:
    description = "Best response for player 2 against s1"
    extra_params = []
    constraints = [
        forall(y:p2).(U2(s1,y)<=U2(s1,y1))
    ]
    return y1

def Random1() -> p1:
    description = "Random strategy for player 1"
    extra_params = []
    constraints = []
    return x

def Random2() -> p2:
    description = "Random strategy for player 2"
    extra_params = []
    constraints = []
    return y

def algo():
    a1: p1 = Random1()
    b1: p1 = BestResponse2(a1)
    a2: p2 = BestResponse1(b1)