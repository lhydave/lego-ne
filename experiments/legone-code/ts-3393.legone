num_players = 2

def StationaryPoint() -> List[p1, p2, p1, p2]:
    description = "Compute the stationary point and its dual solution"
    extra_params = ["rho"]
    constraints = [
        forall(x1:p1).forall(x2:p1).forall(y:p2).(f1(x1,y)-f1(x2,y)==U1(x2,y)-U1(x1,y)), # missing default constraints
        forall(x:p1).forall(y1:p2).forall(y2:p2).(f2(x,y1)-f2(x,y2)==U2(x,y2)-U2(x,y1)), # missing default constraints
        0<=rho,
        rho<=1,
        f1(xs,ys)==f2(xs,ys),
        forall(x:p1).(U1(x,ys)<=U1(w,ys)),
        forall(y:p2).(U2(xs,y)<=U2(xs,z)),
        forall(x:p1).forall(y:p2).(f1(x,y)<=rho*(U1(w,y)-U1(x,ys)-U1(xs,y)+U1(xs,ys))+(1-rho)*(U2(x,z)-U2(xs,y)-U2(x,ys)+U2(xs,ys)))
    ]
    return xs, ys, w, z

def algo():
    xs:p1, ys:p2, w:p1, z:p2 = StationaryPoint()